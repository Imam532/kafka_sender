plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.inui'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

var modelVersion = "0.0.99"
var lombokVersion = "1.18.24"
var eventVersion = "0.0.11-SNAPSHOT"
var mapstructVersion = "1.5.3.Final"
var testContainerVersion = "1.17.6"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://gitlab.com/api/v4/groups/inui-software/-/packages/maven"
        name "GitLab"
        credentials(HttpHeaderCredentials) {
            //name = gitLabTokenName // the variables resides in ~/.gradle/gradle.properties
            //value = gitLabTokenValue
            name = 'Private-Token'
            value = 'glpat-r768EWdQnaGcPecwyxyo'
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

dependencies {
    implementation "com.inuigaming:inui-models:${modelVersion}"
    implementation "com.inuigaming:inui-kafka-event-starter:${eventVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'commons-io:commons-io:2.11.0'


    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

test {
    useJUnitPlatform()
}

task cleanBuild {
    dependsOn 'clean'
    dependsOn 'build'
    tasks.findByName('build').mustRunAfter 'clean'
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.verbose=true',
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}